<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KubeMQ.SDK.csharp</name>
    </assembly>
    <members>
        <member name="T:KubeMQ.SDK.csharp.CommandQuery.Channel">
            <summary>
            Represents a Initiator with predefined parameters.
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.Channel.#ctor(KubeMQ.SDK.csharp.CommandQuery.ChannelParameters)">
            <summary>
            Initializes a new instance of the RequestChannel class using RequestChannelParameters.
            </summary>
            <param name="parameters">RequestChannelParameters that present a predefined set of parameters</param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.Channel.#ctor(KubeMQ.SDK.csharp.CommandQuery.RequestType,System.String,System.String,System.Int32,System.String,System.Int32,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the RequestChannel class using a set of parameters.
            </summary>
            <param name="requestsType">KubeMQ.SDK.csharp.CommandQuery, Represents the channel type Command/Query.</param>
            <param name="channelName">Represents The channel name to send to using the KubeMQ.</param>
            <param name="clientID">Represents the sender ID that the Request will be send under.</param>
            <param name="timeout">Represents the limit for waiting for response (Milliseconds)</param>
            <param name="cacheKey">Represents if the request should be saved from Cache and under what "Key"(System.String) to save it.</param>
            <param name="cacheTTL">Cache time to live : for how long does the request should be saved in Cache</param>
            <param name="KubeMQAddress">KubeMQ server address.</param>
            <param name="logger">Optional Microsoft.Extensions.Logging.ILogger, Logger will write to default output with suffix KubeMQSDK.</param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.Channel.SendRequest(KubeMQ.SDK.csharp.CommandQuery.Request,KubeMQ.SDK.csharp.CommandQuery.RequestParameters)">
            <summary>
            Publish a single request using the KubeMQ
            </summary>
            <param name="request">The KubeMQ.SDK.csharp.RequestReply.LowLevel.request that will be sent to the kubeMQ.</param>
            <param name="overrideParams">Optional - allow overwriting "Timeout" "CacheKey" and "CacheTTL" for a single Request.</param>
            <returns>Response</returns>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.Channel.SendRequestAsync(KubeMQ.SDK.csharp.CommandQuery.Request,KubeMQ.SDK.csharp.CommandQuery.RequestParameters)">
            <summary>
            Publish a single async request using the KubeMQ 
            </summary>
            <param name="request">The KubeMQ.SDK.csharp.RequestReply.LowLevel.request that will be sent to the kubeMQ.</param>
            <param name="overrideParams">Optional - allow overwriting "Timeout" "CacheKey" and "CacheTTL" for a single Request.</param>
            <returns>Response</returns>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.Channel.SendRequest(KubeMQ.SDK.csharp.CommandQuery.Request,KubeMQ.SDK.csharp.CommandQuery.HandleResponseDelegate,KubeMQ.SDK.csharp.CommandQuery.RequestParameters)">
            <summary>
            Publish a single request using the KubeMQ , response will return in the passed handler.
            </summary>
            <param name="request">The KubeMQ.SDK.csharp.RequestReply.LowLevel.request that will be sent to the kubeMQ.</param>
            <param name="handler">Method that will be activated once receiving response.</param>
            <param name="overrideParams">Optional - allow overwriting "Timeout" "CacheKey" and "CacheTTL" for a single Request.</param>
            <returns>A task that represents the request that was sent using the SendRequest .</returns>
        </member>
        <member name="T:KubeMQ.SDK.csharp.CommandQuery.ChannelParameters">
            <summary>
            Contain a set of parameters that can be passed to KubeMQ.SDK.csharp.CommandQuery.ChannelParameters CTOR .
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.ChannelParameters.RequestsType">
            <summary>
             Represents the type of request operation using KubeMQ.SDK.csharp.CommandQuery.RequestType.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.ChannelParameters.ClientID">
            <summary>
            Represents the sender ID that the messages will be send under.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.ChannelParameters.ChannelName">
            <summary>
            Represents The channel name to send to using the KubeMQ .
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.ChannelParameters.Timeout">
            <summary>
            Represents the limit for waiting for response (Milliseconds).
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.ChannelParameters.CacheKey">
            <summary>
            Represents if the request should be saved from Cache and under what "Key"(System.String) to save it.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.ChannelParameters.CacheTTL">
            <summary>
            Cache time to live : for how long does the request should be saved in Cache.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.ChannelParameters.KubeMQAddress">
            <summary>
            Represents The address of the KubeMQ server.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.ChannelParameters.Logger">
            <summary>
            Optional Microsoft.Extensions.Logging.ILogger, Logger will write to default output with suffix KubeMQSDK when null.
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.ChannelParameters.#ctor">
            <summary>
            Initializes a new instance of the KubeMQ.SDK.csharp.CommandQuery.ChannelParameters class.
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.ChannelParameters.#ctor(KubeMQ.SDK.csharp.CommandQuery.RequestType,System.String,System.String,System.Int32,System.String,System.Int32,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the KubeMQ.SDK.csharp.CommandQuery.ChannelParameters class with set parameters.
            </summary>
            <param name="requestsType">KubeMQ.SDK.csharp.CommandQuery, Represents the channel type Command/Query</param>
            <param name="channelName">Represents The channel name to send to using the KubeMQ.</param>
            <param name="clientID">Represents the sender ID that the messages will be send under.</param>
            <param name="timeout">Represents the limit for waiting for response (Milliseconds).</param>
            <param name="cacheKey">Cache time to live : for how long does the request should be saved in Cache.</param>
            <param name="cacheTTL">Represents The address of the KubeMQ server.</param>
            <param name="kubeMQAddress">Represents The address of the KubeMQ server.</param>
            <param name="logger">Optional Microsoft.Extensions.Logging.ILogger, Logger will write to default output with suffix KubeMQSDK when null.</param>
        </member>
        <member name="T:KubeMQ.SDK.csharp.CommandQuery.HandleResponseDelegate">
            <summary>
            Represents a delegate that receive KubeMQ.SDK.csharp.RequestReply.Response.
            </summary>
            <param name="response"></param>
        </member>
        <member name="T:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Initiator">
            <summary>
             Represents the instance that is responsible to send requests to the kubemq. 
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Initiator.#ctor">
            <summary>
            Initialize a new Initiator to send requests and handle response
            Logger will write to default output with suffix KubeMQSDK
            KubeMQAddress will be parsed from Config or environment parameter
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Initiator.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>    
            Initialize a new Initiator to send requests and handle response 
            KubeMQAddress will be parsed from Config or environment parameter
            </summary>
            <param name="plogger">Microsoft.Extensions.Logging Ilogger</param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Initiator.#ctor(System.String)">
            <summary>
            Initialize a new Initiator to send requests and handle response 
            Logger will write to default output with suffix KubeMQSDK
            </summary>
            <param name="KubeMQAddress">KubeMQ server address</param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Initiator.#ctor(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initialize a new Initiator to send requests and handle response 
            </summary>
            <param name="KubeMQAddress">KubeMQ server address</param>
            <param name="plogger">Microsoft.Extensions.Logging Ilogger</param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Initiator.SendRequest(KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request,KubeMQ.SDK.csharp.CommandQuery.HandleResponseDelegate)">
            <summary>
            Publish a single request using the KubeMQ , response will return in the passed handler.
            </summary>
            <param name="handler">Method that will be activated once receiving response.</param>
            <param name="request">The KubeMQ.SDK.csharp.RequestReply.LowLevel.request that will be sent to the kubeMQ.</param>
            <returns>A task that represents the request that was sent using the SendRequest.</returns>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Initiator.SendRequestAsync(KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request)">
            <summary>
             Publish a single request using the KubeMQ Async .
            </summary>
            <param name="request">The KubeMQ.SDK.csharp.RequestReply.LowLevel.request that will be sent to the kubeMQ.</param>
            <returns> A task that represents the request that was sent using the SendRequestAsync.</returns>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Initiator.SendRequest(KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request)">
            <summary>
            Publish a single request using the KubeMQ.
            </summary>
            <param name="request"></param>
            <returns>KubeMQ KubeMQ.SDK.csharp.RequestReply.Response.</returns>
        </member>
        <member name="T:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request">
            <summary>
             Represents the Request used in RequestReply to send information using the KubeMQ .
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request.RequestID">
            <summary>
            Represents a Request identifier.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request.RequestType">
            <summary>
             Represents the type of request operation using KubeMQ.SDK.csharp.CommandQuery.RequestType.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request.ClientID">
            <summary>
            Represents the sender ID that the Request will be send under.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request.Channel">
            <summary>
            Represents The channel name to send to using the KubeMQ
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request.ReplyChannel">
            <summary>
            Represents The channel name to return response to .
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request.Metadata">
            <summary>
            Represents text as System.String.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request.Body">
            <summary>
            Represents The content of the KubeMQ.SDK.csharp.RequestReply.LowLevel.Request.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request.Timeout">
            <summary>
            Represents the limit for waiting for response (Milliseconds)
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request.CacheKey">
            <summary>
            Represents if the request should be saved from Cache and under what "Key"(System.String) to save it.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request.CacheTTL">
            <summary>
            Cache time to live : for how long does the request should be saved in Cache
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request.#ctor">
            <summary>
            Initializes a new instance of the KubeMQ.SDK.csharp.RequestReply.LowLevel.Request .
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request.#ctor(System.String,KubeMQ.SDK.csharp.CommandQuery.RequestType,System.String,System.String,System.String,System.String,System.Byte[],System.Int32,System.String,System.Int32)">
            <summary>
             Initializes a new instance of the KubeMQ.SDK.csharp.RequestReply.LowLevel.Request with a set of parameters .
            </summary>
            <param name="requestID">Represents a Request identifier.</param>
            <param name="requestType"> Represents the type of request operation using KubeMQ.SDK.csharp.CommandQuery.RequestType.</param>
            <param name="clientID">Represents the sender ID that the Request will be send under.</param>
            <param name="channel">Represents The channel name to send to using the KubeMQ.</param>
            <param name="replaychannel">Represents The channel name to return response to.</param>
            <param name="metadata">Represents text as System.String.</param>
            <param name="body">Represents The content of the KubeMQ.SDK.csharp.RequestReply.LowLevel.Request.</param>
            <param name="timeout">Represents the limit for waiting for response (Milliseconds)</param>
            <param name="cacheKey">Represents if the request should be saved from Cache and under what "Key"(System.String) to save it.</param>
            <param name="cacheTTL">Cache time to live : for how long does the request should be saved in Cache.</param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request.Convert">
            <summary>
            Convert a Request to an InnerRequest
            </summary>
            <returns> An InnerRequest</returns>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.LowLevel.Request.GetNextId">
            <summary>
            Get an unique thread safety ID between 1 to 65535
            </summary>
            <returns></returns>
        </member>
        <member name="T:KubeMQ.SDK.csharp.CommandQuery.Request">
            <summary>
            Represents the Request used in RequestReply KubeMQ.SDK.csharp.RequestReply.channel.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.Request.RequestID">
            <summary>
            Represents a Request identifier.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.Request.Metadata">
            <summary>
            Represents metadata as System.String.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.Request.Body">
            <summary>
            Represents The content of the KubeMQ.SDK.csharp.RequestReply.Request.
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.Request.#ctor">
            <summary>
            Initializes a new instance of the KubeMQ.SDK.csharp.RequestReply.Request for KubeMQ.SDK.csharp.RequestReply.channel use.
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.Request.#ctor(System.String,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the KubeMQ.SDK.csharp.RequestReply.Request for KubeMQ.SDK.csharp.RequestReply.channel use with a set of parameters.
            </summary>
            <param name="id">Represents a Request identifier.</param>
            <param name="metadata">Represents text as System.String.</param>
            <param name="body">Represents The content of the KubeMQ.SDK.csharp.RequestReply.Request.</param>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.RequestParameters.Timeout">
            <summary>
            Represents the limit for waiting for response (Milliseconds)
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.RequestParameters.CacheKey">
            <summary>
            Represents if the request should be saved from Cache and under what "Key"(System.String) to save it.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.RequestParameters.CacheTTL">
            <summary>
            Cache time to live : for how long does the request should be saved in Cache.
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.RequestParameters.#ctor">
            <summary>
            Initializes a new instance of the KubeMQ.SDK.csharp.RequestReply.RequestParameters .
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.RequestParameters.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the KubeMQ.SDK.csharp.RequestReply.RequestParameters with a set of chosen parameters to create a RequestChannel .
            </summary>
            <param name="timeout">Represents the limit for waiting for response (Milliseconds)</param>
            <param name="cacheKey">Represents if the request should be saved from Cache and under what "Key"(System.String) to save it.</param>
            <param name="cacheTTL">Cache time to live : for how long does the request should be saved in Cache.</param>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.RequestReceive.RequestID">
            <summary>
            Represents a Request identifier.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.RequestReceive.RequestType">
            <summary>
             Represents the type of request operation using KubeMQ.SDK.csharp.CommandQuery.RequestType.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.RequestReceive.ClientID">
            <summary>
            Represents the sender ID that the Request return from.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.RequestReceive.Channel">
            <summary>
            Represents The channel name to send to using the KubeMQ .
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.RequestReceive.ReplyChannel">
            <summary>
            Represents The channel name that the response returned from.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.RequestReceive.Metadata">
            <summary>
            Represents text as System.String.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.RequestReceive.Body">
            <summary>
            Represents The content of the KubeMQ.SDK.csharp.RequestReply.RequestReceive .
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.RequestReceive.Timeout">
            <summary>
             Represents the limit for waiting for response (Milliseconds) .
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.RequestReceive.CacheKey">
            <summary>
            Represents if the request should be saved from Cache and under what "Key"(System.String) to save it.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.RequestReceive.CacheTTL">
            <summary>
            Cache time to live : for how long does the request should be saved in Cache
            </summary>
        </member>
        <member name="T:KubeMQ.SDK.csharp.CommandQuery.Responder">
            <summary>
            An instance that responsible on receiving request from the kubeMQ.
            </summary>
        </member>
        <member name="T:KubeMQ.SDK.csharp.CommandQuery.Responder.RespondDelegate">
            <summary>
            Represents a delegate that receive KubeMQ.SDK.csharp.RequestReply.RequestReceive.
            </summary>
            <param name="request">Represents an instance of KubeMQ.SDK.csharp.RequestReply.Responder .</param>
            <returns></returns>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.Responder.#ctor">
            <summary>
            Initialize a new Responder to subscribe to Response
            Logger will write to default output with suffix KubeMQSDK
            KubeMQAddress will be parsed from Config or environment parameter
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.Responder.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>    
            Initialize a new Responder to subscribe to Response    
            KubeMQAddress will be parsed from Config or environment parameter
            </summary>
            <param name="plogger">Microsoft.Extensions.Logging Ilogger</param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.Responder.#ctor(System.String)">
            <summary>
            Initialize a new Responder to subscribe to Response  
            Logger will write to default output with suffix KubeMQSDK
            </summary>
            <param name="KubeMQAddress">KubeMQ server address</param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.Responder.#ctor(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initialize a new Responder to subscribe to Response  
            </summary>
            <param name="KubeMQAddress">KubeMQ server address</param>
            <param name="plogger">Microsoft.Extensions.Logging Ilogger</param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.Responder.SubscribeToRequests(KubeMQ.SDK.csharp.Subscription.SubscribeRequest,KubeMQ.SDK.csharp.CommandQuery.Responder.RespondDelegate)">
            <summary>
            Register to kubeMQ Channel using KubeMQ.SDK.csharp.Subscription.SubscribeRequest with RespondDelegate .
            </summary>
            <param name="subscribeRequest">Parameters list represent by KubeMQ.SDK.csharp.Subscription.SubscribeRequest that will determine the subscription configuration.</param>
            <param name="handler">Method the perform when receiving KubeMQ.SDK.csharp.RequestReplay.RequestReceive </param>
            <returns>A task that represents the Subscribe Request.</returns>
        </member>
        <member name="M:KubeMQ.SDK.csharp.CommandQuery.Responder.SubscribeToRequests(KubeMQ.SDK.csharp.Subscription.SubscribeRequest)">
            <summary>
            Register to kubeMQ Channel using KubeMQ.SDK.csharp.Subscription.SubscribeRequest.
            </summary>
            <param name="subscribeRequest">Parameters list represent by KubeMQ.SDK.csharp.Subscription.SubscribeRequest that will determine the subscription configuration.</param>
            <returns>A task that represents the Subscribe Request.</returns>
        </member>
        <member name="T:KubeMQ.SDK.csharp.CommandQuery.Response">
            <summary>
            The response that receiving from KubeMQ after sending a request.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.Response.ClientID">
            <summary>
            Represents the sender ID that the Response will be send under.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.Response.RequestID">
            <summary>
            Represents a Response identifier.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.Response.Metadata">
            <summary>
            Represents text as System.String.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.Response.Body">
            <summary>
            Represents The content of the KubeMQ.SDK.csharp.RequestReply.Response.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.Response.CacheHit">
            <summary>
            Represents if the response was received from Cache.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.Response.Timestamp">
            <summary>
            Represents if the response Time.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.Response.Executed">
            <summary>
            Represents if the response was executed.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.Response.Error">
            <summary>
            Error message
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.CommandQuery.Response.ReplyChannel">
            <summary>
            Channel name for the Response.
            Set and used internally by KubeMQ server
            </summary>
        </member>
        <member name="T:KubeMQ.SDK.csharp.Events.Channel">
            <summary>
            Represents a Sender with a set of predefined parameters.
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.Channel.#ctor(System.String,System.String,System.Boolean,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
             Initializes a new instance of the KubeMQ.SDK.csharp.Events.Channel class using "Manual" Parameters. 
            </summary>
            <param name="channelName">Represents The channel name to send to using the KubeMQ .</param>
            <param name="clientID">Represents the sender ID that the messages will be send under.</param>
            <param name="store"></param>
            <param name="KubeMQAddress">The address the of the KubeMQ including the GRPC Port ,Example: "LocalHost:50000". </param>
            <param name="logger">Optional Microsoft.Extensions.Logging.ILogger, Logger will write to default output with suffix KubeMQSDK.</param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.Channel.#ctor(KubeMQ.SDK.csharp.Events.ChannelParameters)">
            <summary>
            Initializes a new instance of the KubeMQ.SDK.csharp.Events.Channel class using "ChannelParameters" class.
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.Channel.SendEvent(KubeMQ.SDK.csharp.Events.Event)">
            <summary>
            Sending a new Event using the KubeMQ.
            </summary>
            <param name="notification">KubeMQ.SDK.csharp.Events.Event which represent the data to send using the KubeMQ.</param>
            <returns>KubeMQ.SDK.csharp.Events.Result which show the status of the Event sent.</returns>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.Channel.StreamEvent(KubeMQ.SDK.csharp.Events.Event,KubeMQ.SDK.csharp.Events.ReceiveResultDelegate)">
            <summary>
            bi-di streams 'SendEventStream (stream Event) returns (stream Result) ,closed by ClosesEventStreamAsync()
            </summary>
            <param name="notification">KubeMQ.SDK.csharp.Events.Event which represent the data to send using the KubeMQ.</param>
            <param name="resultDelegate">Result stream handler delegate, use null when using Unidirectional no Result</param>
            <returns></returns>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.Channel.ClosesEventStreamAsync">
            <summary>
            close bi-di streams 'SendEventStream (stream Event)
            </summary>
            <returns></returns>
        </member>
        <member name="T:KubeMQ.SDK.csharp.Events.ChannelParameters">
            <summary>
            Configuration parameters for channel.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Events.ChannelParameters.ChannelName">
            <summary>
            Represents The channel name to send to using the KubeMQ .
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Events.ChannelParameters.ClientID">
            <summary>
            Represents the sender ID that the messages will be send under.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Events.ChannelParameters.Store">
            <summary>
            Represents the channel persistence property.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Events.ChannelParameters.KubeMQAddress">
            <summary>
            KubeMQ server address.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Events.ChannelParameters.Logger">
            <summary>
            Optional Microsoft.Extensions.Logging.ILogger, Logger will write to default output with suffix KubeMQSDK when null.
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.ChannelParameters.#ctor">
            <summary>
            Initializes a new instance of the KubeMQ.SDK.csharp.Events.ChannelParameters class with set parameters.
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.ChannelParameters.#ctor(System.String,System.String,System.Boolean,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the KubeMQ.SDK.csharp.Events.ChannelParameters class with set parameters.
            </summary>
            <param name="channelName">Represents The channel name to send to using the KubeMQ.</param>
            <param name="clientID">Represents the sender ID that the messages will be send under.</param>
            <param name="store">Represents the channel persistence property.</param>
            <param name="kubeMQAddress">Represents The address of the KubeMQ server.</param>
            <param name="logger">Optional Microsoft.Extensions.Logging.ILogger, Logger will write to default output with suffix KubeMQSDK when null.</param>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Events.Event.EventID">
            <summary>
            Represents a Event identifier.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Events.Event.Metadata">
            <summary>
            Represents text as System.String.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Events.Event.Body">
            <summary>
            Represents the content of the KubeMQ.SDK.csharp.Events.Event.
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.Event.#ctor(System.String,System.String,System.Byte[])">
            <summary>
            
            </summary>
            <param name="eventID"></param>
            <param name="metadata"></param>
            <param name="body"></param>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Events.LowLevel.Event.Channel">
            <summary>
            Represents The channel name to send to using the KubeMQ .
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Events.LowLevel.Event.Metadata">
            <summary>
            Represents text as System.String.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Events.LowLevel.Event.Body">
            <summary>
            Represents The content of the KubeMQ.SDK.csharp.PubSub.LowLevel.Event.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Events.LowLevel.Event.EventID">
            <summary>
            Represents a Event identifier.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Events.LowLevel.Event.ClientID">
            <summary>
            Represents the sender ID that the events will be send under.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Events.LowLevel.Event.Store">
            <summary>
            Represents if the events should be send to persistence.
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.LowLevel.Event.GetNextId">
            <summary>
            Get an unique thread safety ID between 1 to 65535
            </summary>
            <returns></returns>
        </member>
        <member name="T:KubeMQ.SDK.csharp.Events.LowLevel.Sender">
            <summary>
            Represents the instance that is responsible to send events to the kubemq.
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.LowLevel.Sender.#ctor">
            <summary>
            Initialize a new Sender.
            Logger will write to default output with suffix KubeMQSDK.
            KubeMQAddress will be parsed from Config or environment parameter.
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.LowLevel.Sender.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>    
            Initialize a new Sender with the requested ILogger.
            KubeMQAddress will be parsed from Config or environment parameter.
            </summary>
            <param name="plogger">Microsoft.Extensions.Logging Ilogger.</param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.LowLevel.Sender.#ctor(System.String)">
            <summary>
            Initialize a new Sender under the requested KubeMQ Server Address.
            Logger will write to default output with suffix KubeMQSDK.
            </summary>
            <param name="KubeMQAddress">KubeMQ server address.</param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.LowLevel.Sender.#ctor(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initialize a new Sender under the requested KubeMQ Server Address with the requested ILogger .
            </summary>
            <param name="KubeMQAddress">KubeMQ server address.</param>
            <param name="plogger">Microsoft.Extensions.Logging Ilogger.</param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.LowLevel.Sender.SendEvent(KubeMQ.SDK.csharp.Events.LowLevel.Event)">
            <summary>
            Publish a single event using the KubeMQ.
            </summary>
            <param name="notification">KubeMQ:Event Class.</param>
            <returns>KubeMQ.SDK.csharp.PubSub.Result that contain info regarding event status.</returns>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.LowLevel.Sender.StreamEvent(KubeMQ.SDK.csharp.Events.LowLevel.Event,KubeMQ.SDK.csharp.Events.ReceiveResultDelegate)">
            <summary>
            publish a constant stream of events.
            </summary>
            <param name="notification">KubeMQ:Event Class.</param>
            <param name="resultDelegate"></param>
            <returns>A task that represents the event request that was sent using the StreamEvent .</returns>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.LowLevel.Sender.ClosesEventStreamAsync">
            <summary>
            Close a publish constant stream of events.
            </summary>
            <returns>A task that represents the closing request of the stream events .</returns>
        </member>
        <member name="T:KubeMQ.SDK.csharp.Events.Subscriber.HandleEventDelegate">
            <summary>
            Represents a delegate that receive KubeMQ.SDK.csharp.PubSub.EventReceive.
            </summary>
            <param name="eventReceive">Represents an instance of KubeMQ.SDK.csharp.PubSub.EventReceive</param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.Subscriber.#ctor">
            <summary>
            Initialize a new Subscriber to incoming events
            Logger will write to default output with suffix KubeMQSDK
            KubeMQAddress will be parsed from Config or environment parameter
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.Subscriber.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>    
            Initialize a new Subscriber to incoming events 
            KubeMQAddress will be parsed from Config or environment parameter
            </summary>
            <param name="plogger">Microsoft.Extensions.Logging Ilogger</param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.Subscriber.#ctor(System.String)">
            <summary>
            Initialize a new Subscriber to incoming events 
            Logger will write to default output with suffix KubeMQSDK
            </summary>
            <param name="KubeMQAddress">KubeMQ server address</param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.Subscriber.#ctor(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initialize a new Subscriber to incoming events 
            </summary>
            <param name="KubeMQAddress">KubeMQ server address</param>
            <param name="plogger">Microsoft.Extensions.Logging Ilogger</param>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Events.Subscriber.SubscribeToEvents(KubeMQ.SDK.csharp.Subscription.SubscribeRequest,KubeMQ.SDK.csharp.Events.Subscriber.HandleEventDelegate)">
            <summary>
            Register to kubeMQ Channel using KubeMQ.SDK.csharp.Subscription.SubscribeRequest .
            </summary>
            <param name="subscribeRequest">Parameters list represent by KubeMQ.SDK.csharp.Subscription.SubscribeRequest that will determine the subscription configuration.</param>
            <param name="handler">Method the perform when receiving KubeMQ.SDK.csharp.PubSub.EventReceive .</param>
            <returns>A task that represents the Subscribe Request.</returns>
        </member>
        <member name="T:KubeMQ.SDK.csharp.Subscription.SubscribeRequest">
            <summary>
            Represents a set of parameters which the Subscriber uses to subscribe to the KubeMQ.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Subscription.SubscribeRequest.SubscribeType">
            <summary>
            Represents the type of Subscriber operation KubeMQ.SDK.csharp.Subscription.SubscribeType.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Subscription.SubscribeRequest.ClientID">
            <summary>
            Represents an identifier that will subscribe to kubeMQ under.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Subscription.SubscribeRequest.Channel">
            <summary>
            Represents the channel name that will subscribe to under kubeMQ.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Subscription.SubscribeRequest.Group">
            <summary>
            Represents the group the channel is assign to.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Subscription.SubscribeRequest.EventsStoreType">
            <summary>
            Represents the type of subscription to persistence using KubeMQ.SDK.csharp.Subscription.EventsStoreType.
            </summary>
        </member>
        <member name="P:KubeMQ.SDK.csharp.Subscription.SubscribeRequest.EventsStoreTypeValue">
            <summary>
            Represents the value of subscription to persistence queue.
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Subscription.SubscribeRequest.#ctor">
            <summary>
            Initializes a new instance of the KubeMQ.SDK.csharp.Subscription.SubscribeRequest.
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Subscription.SubscribeRequest.#ctor(KubeMQ.SDK.csharp.Subscription.SubscribeType,System.String,System.String,KubeMQ.SDK.csharp.Subscription.EventsStoreType,System.Int64,System.String)">
            <summary>
            Initializes a new instance of the KubeMQ.SDK.csharp.Subscription.SubscribeRequest using a set of parameters.
            </summary>
            <param name="subscriptionType">Represents the type of Subscriber operation KubeMQ.SDK.csharp.Subscription.SubscribeType.</param>
            <param name="clientID">Represents an identifier that will subscribe to kubeMQ under.</param>
            <param name="channel">Represents the channel name that will subscribe to under kubeMQ.</param>
            <param name="group">Represents the group the channel is assign to , if not filled will be empty string(no group).</param>        
            <param name="eventsStoreType"> Represents the type of subscription to persistence using KubeMQ.SDK.csharp.Subscription.EventsStoreType.</param>
            <param name="eventsStoreTypeValue">Represents the value of subscription to persistence queue.</param>
        </member>
        <member name="T:KubeMQ.SDK.csharp.Subscription.SubscribeType">
            <summary>
            Type of subscription operation pattern
            </summary>
        </member>
        <member name="F:KubeMQ.SDK.csharp.Subscription.SubscribeType.SubscribeTypeUndefined">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:KubeMQ.SDK.csharp.Subscription.SubscribeType.Events">
            <summary>
            PubSub event
            </summary>
        </member>
        <member name="F:KubeMQ.SDK.csharp.Subscription.SubscribeType.EventsStore">
            <summary>
            PubSub event with persistence
            </summary>
        </member>
        <member name="F:KubeMQ.SDK.csharp.Subscription.SubscribeType.Commands">
            <summary>
            ReqRep perform action
            </summary>
        </member>
        <member name="F:KubeMQ.SDK.csharp.Subscription.SubscribeType.Queries">
            <summary>
            ReqRep return data
            </summary>
        </member>
        <member name="T:KubeMQ.SDK.csharp.Tools.Converter">
            <summary>
            A class that is responsible for Converting Byte[] to object and vice versa.
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Tools.Converter.ToByteString(System.Byte[])">
            <summary>
            Byte Array to ByteString
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Tools.Converter.FromByteArray(System.Byte[])">
            <summary>
            Convert from byte array to object
            </summary>
        </member>
        <member name="M:KubeMQ.SDK.csharp.Tools.Converter.ToByteArray(System.Object)">
            <summary>
            Convert from object to byte array
            </summary>
        </member>
        <member name="T:KubeMQ.Grpc.KubemqReflection">
            <summary>Holder for reflection information generated from kubemq.proto</summary>
        </member>
        <member name="P:KubeMQ.Grpc.KubemqReflection.Descriptor">
            <summary>File descriptor for kubemq.proto</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Result.EventIDFieldNumber">
            <summary>Field number for the "EventID" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Result.SentFieldNumber">
            <summary>Field number for the "Sent" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Result.ErrorFieldNumber">
            <summary>Field number for the "Error" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Event.EventIDFieldNumber">
            <summary>Field number for the "EventID" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Event.ClientIDFieldNumber">
            <summary>Field number for the "ClientID" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Event.ChannelFieldNumber">
            <summary>Field number for the "Channel" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Event.MetadataFieldNumber">
            <summary>Field number for the "Metadata" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Event.BodyFieldNumber">
            <summary>Field number for the "Body" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Event.StoreFieldNumber">
            <summary>Field number for the "Store" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.EventReceive.EventIDFieldNumber">
            <summary>Field number for the "EventID" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.EventReceive.ChannelFieldNumber">
            <summary>Field number for the "Channel" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.EventReceive.MetadataFieldNumber">
            <summary>Field number for the "Metadata" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.EventReceive.BodyFieldNumber">
            <summary>Field number for the "Body" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.EventReceive.TimestampFieldNumber">
            <summary>Field number for the "Timestamp" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.EventReceive.SequenceFieldNumber">
            <summary>Field number for the "Sequence" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Subscribe.SubscribeTypeDataFieldNumber">
            <summary>Field number for the "SubscribeTypeData" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Subscribe.ClientIDFieldNumber">
            <summary>Field number for the "ClientID" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Subscribe.ChannelFieldNumber">
            <summary>Field number for the "Channel" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Subscribe.GroupFieldNumber">
            <summary>Field number for the "Group" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Subscribe.EventsStoreTypeDataFieldNumber">
            <summary>Field number for the "EventsStoreTypeData" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Subscribe.EventsStoreTypeValueFieldNumber">
            <summary>Field number for the "EventsStoreTypeValue" field.</summary>
        </member>
        <member name="T:KubeMQ.Grpc.Subscribe.Types">
            <summary>Container for nested types declared in the Subscribe message type.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Request.RequestIDFieldNumber">
            <summary>Field number for the "RequestID" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Request.RequestTypeDataFieldNumber">
            <summary>Field number for the "RequestTypeData" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Request.ClientIDFieldNumber">
            <summary>Field number for the "ClientID" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Request.ChannelFieldNumber">
            <summary>Field number for the "Channel" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Request.MetadataFieldNumber">
            <summary>Field number for the "Metadata" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Request.BodyFieldNumber">
            <summary>Field number for the "Body" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Request.ReplyChannelFieldNumber">
            <summary>Field number for the "ReplyChannel" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Request.TimeoutFieldNumber">
            <summary>Field number for the "Timeout" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Request.CacheKeyFieldNumber">
            <summary>Field number for the "CacheKey" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Request.CacheTTLFieldNumber">
            <summary>Field number for the "CacheTTL" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Request.SpanFieldNumber">
            <summary>Field number for the "Span" field.</summary>
        </member>
        <member name="T:KubeMQ.Grpc.Request.Types">
            <summary>Container for nested types declared in the Request message type.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Response.ClientIDFieldNumber">
            <summary>Field number for the "ClientID" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Response.RequestIDFieldNumber">
            <summary>Field number for the "RequestID" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Response.ReplyChannelFieldNumber">
            <summary>Field number for the "ReplyChannel" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Response.MetadataFieldNumber">
            <summary>Field number for the "Metadata" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Response.BodyFieldNumber">
            <summary>Field number for the "Body" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Response.CacheHitFieldNumber">
            <summary>Field number for the "CacheHit" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Response.TimestampFieldNumber">
            <summary>Field number for the "Timestamp" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Response.ExecutedFieldNumber">
            <summary>Field number for the "Executed" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Response.ErrorFieldNumber">
            <summary>Field number for the "Error" field.</summary>
        </member>
        <member name="F:KubeMQ.Grpc.Response.SpanFieldNumber">
            <summary>Field number for the "Span" field.</summary>
        </member>
        <member name="P:KubeMQ.Grpc.kubemq.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:KubeMQ.Grpc.kubemq.kubemqBase">
            <summary>Base class for server-side implementations of kubemq</summary>
        </member>
        <member name="T:KubeMQ.Grpc.kubemq.kubemqClient">
            <summary>Client for kubemq</summary>
        </member>
        <member name="M:KubeMQ.Grpc.kubemq.kubemqClient.#ctor(Grpc.Core.Channel)">
            <summary>Creates a new client for kubemq</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:KubeMQ.Grpc.kubemq.kubemqClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for kubemq that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:KubeMQ.Grpc.kubemq.kubemqClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:KubeMQ.Grpc.kubemq.kubemqClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:KubeMQ.Grpc.kubemq.kubemqClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:KubeMQ.Grpc.kubemq.BindService(KubeMQ.Grpc.kubemq.kubemqBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
    </members>
</doc>
